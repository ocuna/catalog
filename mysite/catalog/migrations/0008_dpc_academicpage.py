# Generated by Django 3.2.12 on 2022-04-27 21:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0007_auto_20220427_0917'),
    ]

    operations = [
        migrations.CreateModel(
            name='DPC_AcademicPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', model_utils.fields.StatusField(choices=[('published', 'published'), ('removed', 'removed')], default='published', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('title', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9,.\\(\\)\\-]{5,150}$', message='Title must be at least 5 and max 150 Alpha-Numeric Characters, may the following punctionation characters: ,.()-_')])),
                ('unique_program_code', models.CharField(help_text='Must be unique.  Is used to identify parent/child relationships of programs.  Such as a concentration of a major.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_\\-]{6,30}$', message='Code must be unique.  Code must be at least 6 and max 30 Alpha-Numeric Characters, may include underscores and dashes')])),
                ('body_a', models.TextField(help_text='HTML in the top portion of the page')),
                ('body_b', models.TextField(help_text='HTML in the bottom portion of the page')),
                ('department', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('library__name', 'Faculty Deparment')), related_name='academicpage_departments', to='catalog.DPC_TaxonomyTerm')),
                ('parent_code', models.ForeignKey(blank=True, default='', limit_choices_to={'STATUS': 'published'}, on_delete=django.db.models.deletion.SET_DEFAULT, to='catalog.dpc_academicpage', to_field='unique_program_code')),
                ('program_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(('library__name', 'Program Type')), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='academicpage_programtype', to='catalog.dpc_taxonomyterm')),
                ('taxonomy_term', models.ManyToManyField(blank=True, limit_choices_to=models.Q(models.Q(('library__name', 'Program Type'), _negated=True), models.Q(('library__name', 'Faculty Department'), _negated=True), _connector='OR'), related_name='academicpage_taxonomyterms', to='catalog.DPC_TaxonomyTerm')),
            ],
            options={
                'verbose_name': 'Academic Degree Page',
                'verbose_name_plural': 'Academic Degree Pages',
            },
        ),
    ]
